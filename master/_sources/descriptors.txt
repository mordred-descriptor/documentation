Descriptor List
===============
preset descriptors

.. code:: python

    calc = Calculator(all_descriptors())

.. csv-table:: Descriptor list
    :header: "#", "module", "name", "constructor"
    :widths: 10, 25, 25, 40

    1, AcidBase, nAcid, "AcidicGroupCount()"
    2, , nBase, "BasicGroupCount()"
    3, AdjacencyMatrix, SpAbs_A, "AdjacencyMatrix('SpAbs')"
    4, , SpMax_A, "AdjacencyMatrix('SpMax')"
    5, , SpDiam_A, "AdjacencyMatrix('SpDiam')"
    6, , SpAD_A, "AdjacencyMatrix('SpAD')"
    7, , SpMAD_A, "AdjacencyMatrix('SpMAD')"
    8, , LogEE_A, "AdjacencyMatrix('LogEE')"
    9, , SM1_A, "AdjacencyMatrix('SM1')"
    10, , VE1_A, "AdjacencyMatrix('VE1')"
    11, , VE2_A, "AdjacencyMatrix('VE2')"
    12, , VE3_A, "AdjacencyMatrix('VE3')"
    13, , VR1_A, "AdjacencyMatrix('VR1')"
    14, , VR2_A, "AdjacencyMatrix('VR2')"
    15, , VR3_A, "AdjacencyMatrix('VR3')"
    16, Aromatic, nAromAtom, "AromaticAtomsCount()"
    17, , nAromBond, "AromaticBondsCount()"
    18, AtomCount, nAtom, "AtomCount('Atom')"
    19, , nHeavyAtom, "AtomCount('HeavyAtom')"
    20, , nH, "AtomCount('H')"
    21, , nB, "AtomCount('B')"
    22, , nC, "AtomCount('C')"
    23, , nN, "AtomCount('N')"
    24, , nO, "AtomCount('O')"
    25, , nS, "AtomCount('S')"
    26, , nP, "AtomCount('P')"
    27, , nF, "AtomCount('F')"
    28, , nCl, "AtomCount('Cl')"
    29, , nBr, "AtomCount('Br')"
    30, , nI, "AtomCount('I')"
    31, , nX, "AtomCount('X')"
    32, Autocorrelation, ATS0Z, "ATS(0, 'Z')"
    33, , ATS1Z, "ATS(1, 'Z')"
    34, , ATS2Z, "ATS(2, 'Z')"
    35, , ATS3Z, "ATS(3, 'Z')"
    36, , ATS4Z, "ATS(4, 'Z')"
    37, , ATS5Z, "ATS(5, 'Z')"
    38, , ATS6Z, "ATS(6, 'Z')"
    39, , ATS7Z, "ATS(7, 'Z')"
    40, , ATS8Z, "ATS(8, 'Z')"
    41, , ATS0m, "ATS(0, 'm')"
    42, , ATS1m, "ATS(1, 'm')"
    43, , ATS2m, "ATS(2, 'm')"
    44, , ATS3m, "ATS(3, 'm')"
    45, , ATS4m, "ATS(4, 'm')"
    46, , ATS5m, "ATS(5, 'm')"
    47, , ATS6m, "ATS(6, 'm')"
    48, , ATS7m, "ATS(7, 'm')"
    49, , ATS8m, "ATS(8, 'm')"
    50, , ATS0v, "ATS(0, 'v')"
    51, , ATS1v, "ATS(1, 'v')"
    52, , ATS2v, "ATS(2, 'v')"
    53, , ATS3v, "ATS(3, 'v')"
    54, , ATS4v, "ATS(4, 'v')"
    55, , ATS5v, "ATS(5, 'v')"
    56, , ATS6v, "ATS(6, 'v')"
    57, , ATS7v, "ATS(7, 'v')"
    58, , ATS8v, "ATS(8, 'v')"
    59, , ATS0e, "ATS(0, 'e')"
    60, , ATS1e, "ATS(1, 'e')"
    61, , ATS2e, "ATS(2, 'e')"
    62, , ATS3e, "ATS(3, 'e')"
    63, , ATS4e, "ATS(4, 'e')"
    64, , ATS5e, "ATS(5, 'e')"
    65, , ATS6e, "ATS(6, 'e')"
    66, , ATS7e, "ATS(7, 'e')"
    67, , ATS8e, "ATS(8, 'e')"
    68, , ATS0pe, "ATS(0, 'pe')"
    69, , ATS1pe, "ATS(1, 'pe')"
    70, , ATS2pe, "ATS(2, 'pe')"
    71, , ATS3pe, "ATS(3, 'pe')"
    72, , ATS4pe, "ATS(4, 'pe')"
    73, , ATS5pe, "ATS(5, 'pe')"
    74, , ATS6pe, "ATS(6, 'pe')"
    75, , ATS7pe, "ATS(7, 'pe')"
    76, , ATS8pe, "ATS(8, 'pe')"
    77, , ATS0are, "ATS(0, 'are')"
    78, , ATS1are, "ATS(1, 'are')"
    79, , ATS2are, "ATS(2, 'are')"
    80, , ATS3are, "ATS(3, 'are')"
    81, , ATS4are, "ATS(4, 'are')"
    82, , ATS5are, "ATS(5, 'are')"
    83, , ATS6are, "ATS(6, 'are')"
    84, , ATS7are, "ATS(7, 'are')"
    85, , ATS8are, "ATS(8, 'are')"
    86, , ATS0p, "ATS(0, 'p')"
    87, , ATS1p, "ATS(1, 'p')"
    88, , ATS2p, "ATS(2, 'p')"
    89, , ATS3p, "ATS(3, 'p')"
    90, , ATS4p, "ATS(4, 'p')"
    91, , ATS5p, "ATS(5, 'p')"
    92, , ATS6p, "ATS(6, 'p')"
    93, , ATS7p, "ATS(7, 'p')"
    94, , ATS8p, "ATS(8, 'p')"
    95, , ATS0i, "ATS(0, 'i')"
    96, , ATS1i, "ATS(1, 'i')"
    97, , ATS2i, "ATS(2, 'i')"
    98, , ATS3i, "ATS(3, 'i')"
    99, , ATS4i, "ATS(4, 'i')"
    100, , ATS5i, "ATS(5, 'i')"
    101, , ATS6i, "ATS(6, 'i')"
    102, , ATS7i, "ATS(7, 'i')"
    103, , ATS8i, "ATS(8, 'i')"
    104, , ATS0s, "ATS(0, 's')"
    105, , ATS1s, "ATS(1, 's')"
    106, , ATS2s, "ATS(2, 's')"
    107, , ATS3s, "ATS(3, 's')"
    108, , ATS4s, "ATS(4, 's')"
    109, , ATS5s, "ATS(5, 's')"
    110, , ATS6s, "ATS(6, 's')"
    111, , ATS7s, "ATS(7, 's')"
    112, , ATS8s, "ATS(8, 's')"
    113, , AATS0Z, "AATS(0, 'Z')"
    114, , AATS1Z, "AATS(1, 'Z')"
    115, , AATS2Z, "AATS(2, 'Z')"
    116, , AATS3Z, "AATS(3, 'Z')"
    117, , AATS4Z, "AATS(4, 'Z')"
    118, , AATS5Z, "AATS(5, 'Z')"
    119, , AATS6Z, "AATS(6, 'Z')"
    120, , AATS7Z, "AATS(7, 'Z')"
    121, , AATS8Z, "AATS(8, 'Z')"
    122, , AATS0m, "AATS(0, 'm')"
    123, , AATS1m, "AATS(1, 'm')"
    124, , AATS2m, "AATS(2, 'm')"
    125, , AATS3m, "AATS(3, 'm')"
    126, , AATS4m, "AATS(4, 'm')"
    127, , AATS5m, "AATS(5, 'm')"
    128, , AATS6m, "AATS(6, 'm')"
    129, , AATS7m, "AATS(7, 'm')"
    130, , AATS8m, "AATS(8, 'm')"
    131, , AATS0v, "AATS(0, 'v')"
    132, , AATS1v, "AATS(1, 'v')"
    133, , AATS2v, "AATS(2, 'v')"
    134, , AATS3v, "AATS(3, 'v')"
    135, , AATS4v, "AATS(4, 'v')"
    136, , AATS5v, "AATS(5, 'v')"
    137, , AATS6v, "AATS(6, 'v')"
    138, , AATS7v, "AATS(7, 'v')"
    139, , AATS8v, "AATS(8, 'v')"
    140, , AATS0e, "AATS(0, 'e')"
    141, , AATS1e, "AATS(1, 'e')"
    142, , AATS2e, "AATS(2, 'e')"
    143, , AATS3e, "AATS(3, 'e')"
    144, , AATS4e, "AATS(4, 'e')"
    145, , AATS5e, "AATS(5, 'e')"
    146, , AATS6e, "AATS(6, 'e')"
    147, , AATS7e, "AATS(7, 'e')"
    148, , AATS8e, "AATS(8, 'e')"
    149, , AATS0pe, "AATS(0, 'pe')"
    150, , AATS1pe, "AATS(1, 'pe')"
    151, , AATS2pe, "AATS(2, 'pe')"
    152, , AATS3pe, "AATS(3, 'pe')"
    153, , AATS4pe, "AATS(4, 'pe')"
    154, , AATS5pe, "AATS(5, 'pe')"
    155, , AATS6pe, "AATS(6, 'pe')"
    156, , AATS7pe, "AATS(7, 'pe')"
    157, , AATS8pe, "AATS(8, 'pe')"
    158, , AATS0are, "AATS(0, 'are')"
    159, , AATS1are, "AATS(1, 'are')"
    160, , AATS2are, "AATS(2, 'are')"
    161, , AATS3are, "AATS(3, 'are')"
    162, , AATS4are, "AATS(4, 'are')"
    163, , AATS5are, "AATS(5, 'are')"
    164, , AATS6are, "AATS(6, 'are')"
    165, , AATS7are, "AATS(7, 'are')"
    166, , AATS8are, "AATS(8, 'are')"
    167, , AATS0p, "AATS(0, 'p')"
    168, , AATS1p, "AATS(1, 'p')"
    169, , AATS2p, "AATS(2, 'p')"
    170, , AATS3p, "AATS(3, 'p')"
    171, , AATS4p, "AATS(4, 'p')"
    172, , AATS5p, "AATS(5, 'p')"
    173, , AATS6p, "AATS(6, 'p')"
    174, , AATS7p, "AATS(7, 'p')"
    175, , AATS8p, "AATS(8, 'p')"
    176, , AATS0i, "AATS(0, 'i')"
    177, , AATS1i, "AATS(1, 'i')"
    178, , AATS2i, "AATS(2, 'i')"
    179, , AATS3i, "AATS(3, 'i')"
    180, , AATS4i, "AATS(4, 'i')"
    181, , AATS5i, "AATS(5, 'i')"
    182, , AATS6i, "AATS(6, 'i')"
    183, , AATS7i, "AATS(7, 'i')"
    184, , AATS8i, "AATS(8, 'i')"
    185, , AATS0s, "AATS(0, 's')"
    186, , AATS1s, "AATS(1, 's')"
    187, , AATS2s, "AATS(2, 's')"
    188, , AATS3s, "AATS(3, 's')"
    189, , AATS4s, "AATS(4, 's')"
    190, , AATS5s, "AATS(5, 's')"
    191, , AATS6s, "AATS(6, 's')"
    192, , AATS7s, "AATS(7, 's')"
    193, , AATS8s, "AATS(8, 's')"
    194, , ATSC0c, "ATSC(0, 'c')"
    195, , ATSC1c, "ATSC(1, 'c')"
    196, , ATSC2c, "ATSC(2, 'c')"
    197, , ATSC3c, "ATSC(3, 'c')"
    198, , ATSC4c, "ATSC(4, 'c')"
    199, , ATSC5c, "ATSC(5, 'c')"
    200, , ATSC6c, "ATSC(6, 'c')"
    201, , ATSC7c, "ATSC(7, 'c')"
    202, , ATSC8c, "ATSC(8, 'c')"
    203, , ATSC0Z, "ATSC(0, 'Z')"
    204, , ATSC1Z, "ATSC(1, 'Z')"
    205, , ATSC2Z, "ATSC(2, 'Z')"
    206, , ATSC3Z, "ATSC(3, 'Z')"
    207, , ATSC4Z, "ATSC(4, 'Z')"
    208, , ATSC5Z, "ATSC(5, 'Z')"
    209, , ATSC6Z, "ATSC(6, 'Z')"
    210, , ATSC7Z, "ATSC(7, 'Z')"
    211, , ATSC8Z, "ATSC(8, 'Z')"
    212, , ATSC0m, "ATSC(0, 'm')"
    213, , ATSC1m, "ATSC(1, 'm')"
    214, , ATSC2m, "ATSC(2, 'm')"
    215, , ATSC3m, "ATSC(3, 'm')"
    216, , ATSC4m, "ATSC(4, 'm')"
    217, , ATSC5m, "ATSC(5, 'm')"
    218, , ATSC6m, "ATSC(6, 'm')"
    219, , ATSC7m, "ATSC(7, 'm')"
    220, , ATSC8m, "ATSC(8, 'm')"
    221, , ATSC0v, "ATSC(0, 'v')"
    222, , ATSC1v, "ATSC(1, 'v')"
    223, , ATSC2v, "ATSC(2, 'v')"
    224, , ATSC3v, "ATSC(3, 'v')"
    225, , ATSC4v, "ATSC(4, 'v')"
    226, , ATSC5v, "ATSC(5, 'v')"
    227, , ATSC6v, "ATSC(6, 'v')"
    228, , ATSC7v, "ATSC(7, 'v')"
    229, , ATSC8v, "ATSC(8, 'v')"
    230, , ATSC0e, "ATSC(0, 'e')"
    231, , ATSC1e, "ATSC(1, 'e')"
    232, , ATSC2e, "ATSC(2, 'e')"
    233, , ATSC3e, "ATSC(3, 'e')"
    234, , ATSC4e, "ATSC(4, 'e')"
    235, , ATSC5e, "ATSC(5, 'e')"
    236, , ATSC6e, "ATSC(6, 'e')"
    237, , ATSC7e, "ATSC(7, 'e')"
    238, , ATSC8e, "ATSC(8, 'e')"
    239, , ATSC0pe, "ATSC(0, 'pe')"
    240, , ATSC1pe, "ATSC(1, 'pe')"
    241, , ATSC2pe, "ATSC(2, 'pe')"
    242, , ATSC3pe, "ATSC(3, 'pe')"
    243, , ATSC4pe, "ATSC(4, 'pe')"
    244, , ATSC5pe, "ATSC(5, 'pe')"
    245, , ATSC6pe, "ATSC(6, 'pe')"
    246, , ATSC7pe, "ATSC(7, 'pe')"
    247, , ATSC8pe, "ATSC(8, 'pe')"
    248, , ATSC0are, "ATSC(0, 'are')"
    249, , ATSC1are, "ATSC(1, 'are')"
    250, , ATSC2are, "ATSC(2, 'are')"
    251, , ATSC3are, "ATSC(3, 'are')"
    252, , ATSC4are, "ATSC(4, 'are')"
    253, , ATSC5are, "ATSC(5, 'are')"
    254, , ATSC6are, "ATSC(6, 'are')"
    255, , ATSC7are, "ATSC(7, 'are')"
    256, , ATSC8are, "ATSC(8, 'are')"
    257, , ATSC0p, "ATSC(0, 'p')"
    258, , ATSC1p, "ATSC(1, 'p')"
    259, , ATSC2p, "ATSC(2, 'p')"
    260, , ATSC3p, "ATSC(3, 'p')"
    261, , ATSC4p, "ATSC(4, 'p')"
    262, , ATSC5p, "ATSC(5, 'p')"
    263, , ATSC6p, "ATSC(6, 'p')"
    264, , ATSC7p, "ATSC(7, 'p')"
    265, , ATSC8p, "ATSC(8, 'p')"
    266, , ATSC0i, "ATSC(0, 'i')"
    267, , ATSC1i, "ATSC(1, 'i')"
    268, , ATSC2i, "ATSC(2, 'i')"
    269, , ATSC3i, "ATSC(3, 'i')"
    270, , ATSC4i, "ATSC(4, 'i')"
    271, , ATSC5i, "ATSC(5, 'i')"
    272, , ATSC6i, "ATSC(6, 'i')"
    273, , ATSC7i, "ATSC(7, 'i')"
    274, , ATSC8i, "ATSC(8, 'i')"
    275, , ATSC0s, "ATSC(0, 's')"
    276, , ATSC1s, "ATSC(1, 's')"
    277, , ATSC2s, "ATSC(2, 's')"
    278, , ATSC3s, "ATSC(3, 's')"
    279, , ATSC4s, "ATSC(4, 's')"
    280, , ATSC5s, "ATSC(5, 's')"
    281, , ATSC6s, "ATSC(6, 's')"
    282, , ATSC7s, "ATSC(7, 's')"
    283, , ATSC8s, "ATSC(8, 's')"
    284, , AATSC0c, "AATSC(0, 'c')"
    285, , AATSC1c, "AATSC(1, 'c')"
    286, , AATSC2c, "AATSC(2, 'c')"
    287, , AATSC3c, "AATSC(3, 'c')"
    288, , AATSC4c, "AATSC(4, 'c')"
    289, , AATSC5c, "AATSC(5, 'c')"
    290, , AATSC6c, "AATSC(6, 'c')"
    291, , AATSC7c, "AATSC(7, 'c')"
    292, , AATSC8c, "AATSC(8, 'c')"
    293, , AATSC0Z, "AATSC(0, 'Z')"
    294, , AATSC1Z, "AATSC(1, 'Z')"
    295, , AATSC2Z, "AATSC(2, 'Z')"
    296, , AATSC3Z, "AATSC(3, 'Z')"
    297, , AATSC4Z, "AATSC(4, 'Z')"
    298, , AATSC5Z, "AATSC(5, 'Z')"
    299, , AATSC6Z, "AATSC(6, 'Z')"
    300, , AATSC7Z, "AATSC(7, 'Z')"
    301, , AATSC8Z, "AATSC(8, 'Z')"
    302, , AATSC0m, "AATSC(0, 'm')"
    303, , AATSC1m, "AATSC(1, 'm')"
    304, , AATSC2m, "AATSC(2, 'm')"
    305, , AATSC3m, "AATSC(3, 'm')"
    306, , AATSC4m, "AATSC(4, 'm')"
    307, , AATSC5m, "AATSC(5, 'm')"
    308, , AATSC6m, "AATSC(6, 'm')"
    309, , AATSC7m, "AATSC(7, 'm')"
    310, , AATSC8m, "AATSC(8, 'm')"
    311, , AATSC0v, "AATSC(0, 'v')"
    312, , AATSC1v, "AATSC(1, 'v')"
    313, , AATSC2v, "AATSC(2, 'v')"
    314, , AATSC3v, "AATSC(3, 'v')"
    315, , AATSC4v, "AATSC(4, 'v')"
    316, , AATSC5v, "AATSC(5, 'v')"
    317, , AATSC6v, "AATSC(6, 'v')"
    318, , AATSC7v, "AATSC(7, 'v')"
    319, , AATSC8v, "AATSC(8, 'v')"
    320, , AATSC0e, "AATSC(0, 'e')"
    321, , AATSC1e, "AATSC(1, 'e')"
    322, , AATSC2e, "AATSC(2, 'e')"
    323, , AATSC3e, "AATSC(3, 'e')"
    324, , AATSC4e, "AATSC(4, 'e')"
    325, , AATSC5e, "AATSC(5, 'e')"
    326, , AATSC6e, "AATSC(6, 'e')"
    327, , AATSC7e, "AATSC(7, 'e')"
    328, , AATSC8e, "AATSC(8, 'e')"
    329, , AATSC0pe, "AATSC(0, 'pe')"
    330, , AATSC1pe, "AATSC(1, 'pe')"
    331, , AATSC2pe, "AATSC(2, 'pe')"
    332, , AATSC3pe, "AATSC(3, 'pe')"
    333, , AATSC4pe, "AATSC(4, 'pe')"
    334, , AATSC5pe, "AATSC(5, 'pe')"
    335, , AATSC6pe, "AATSC(6, 'pe')"
    336, , AATSC7pe, "AATSC(7, 'pe')"
    337, , AATSC8pe, "AATSC(8, 'pe')"
    338, , AATSC0are, "AATSC(0, 'are')"
    339, , AATSC1are, "AATSC(1, 'are')"
    340, , AATSC2are, "AATSC(2, 'are')"
    341, , AATSC3are, "AATSC(3, 'are')"
    342, , AATSC4are, "AATSC(4, 'are')"
    343, , AATSC5are, "AATSC(5, 'are')"
    344, , AATSC6are, "AATSC(6, 'are')"
    345, , AATSC7are, "AATSC(7, 'are')"
    346, , AATSC8are, "AATSC(8, 'are')"
    347, , AATSC0p, "AATSC(0, 'p')"
    348, , AATSC1p, "AATSC(1, 'p')"
    349, , AATSC2p, "AATSC(2, 'p')"
    350, , AATSC3p, "AATSC(3, 'p')"
    351, , AATSC4p, "AATSC(4, 'p')"
    352, , AATSC5p, "AATSC(5, 'p')"
    353, , AATSC6p, "AATSC(6, 'p')"
    354, , AATSC7p, "AATSC(7, 'p')"
    355, , AATSC8p, "AATSC(8, 'p')"
    356, , AATSC0i, "AATSC(0, 'i')"
    357, , AATSC1i, "AATSC(1, 'i')"
    358, , AATSC2i, "AATSC(2, 'i')"
    359, , AATSC3i, "AATSC(3, 'i')"
    360, , AATSC4i, "AATSC(4, 'i')"
    361, , AATSC5i, "AATSC(5, 'i')"
    362, , AATSC6i, "AATSC(6, 'i')"
    363, , AATSC7i, "AATSC(7, 'i')"
    364, , AATSC8i, "AATSC(8, 'i')"
    365, , AATSC0s, "AATSC(0, 's')"
    366, , AATSC1s, "AATSC(1, 's')"
    367, , AATSC2s, "AATSC(2, 's')"
    368, , AATSC3s, "AATSC(3, 's')"
    369, , AATSC4s, "AATSC(4, 's')"
    370, , AATSC5s, "AATSC(5, 's')"
    371, , AATSC6s, "AATSC(6, 's')"
    372, , AATSC7s, "AATSC(7, 's')"
    373, , AATSC8s, "AATSC(8, 's')"
    374, , MATS1c, "MATS(1, 'c')"
    375, , MATS2c, "MATS(2, 'c')"
    376, , MATS3c, "MATS(3, 'c')"
    377, , MATS4c, "MATS(4, 'c')"
    378, , MATS5c, "MATS(5, 'c')"
    379, , MATS6c, "MATS(6, 'c')"
    380, , MATS7c, "MATS(7, 'c')"
    381, , MATS8c, "MATS(8, 'c')"
    382, , MATS1Z, "MATS(1, 'Z')"
    383, , MATS2Z, "MATS(2, 'Z')"
    384, , MATS3Z, "MATS(3, 'Z')"
    385, , MATS4Z, "MATS(4, 'Z')"
    386, , MATS5Z, "MATS(5, 'Z')"
    387, , MATS6Z, "MATS(6, 'Z')"
    388, , MATS7Z, "MATS(7, 'Z')"
    389, , MATS8Z, "MATS(8, 'Z')"
    390, , MATS1m, "MATS(1, 'm')"
    391, , MATS2m, "MATS(2, 'm')"
    392, , MATS3m, "MATS(3, 'm')"
    393, , MATS4m, "MATS(4, 'm')"
    394, , MATS5m, "MATS(5, 'm')"
    395, , MATS6m, "MATS(6, 'm')"
    396, , MATS7m, "MATS(7, 'm')"
    397, , MATS8m, "MATS(8, 'm')"
    398, , MATS1v, "MATS(1, 'v')"
    399, , MATS2v, "MATS(2, 'v')"
    400, , MATS3v, "MATS(3, 'v')"
    401, , MATS4v, "MATS(4, 'v')"
    402, , MATS5v, "MATS(5, 'v')"
    403, , MATS6v, "MATS(6, 'v')"
    404, , MATS7v, "MATS(7, 'v')"
    405, , MATS8v, "MATS(8, 'v')"
    406, , MATS1e, "MATS(1, 'e')"
    407, , MATS2e, "MATS(2, 'e')"
    408, , MATS3e, "MATS(3, 'e')"
    409, , MATS4e, "MATS(4, 'e')"
    410, , MATS5e, "MATS(5, 'e')"
    411, , MATS6e, "MATS(6, 'e')"
    412, , MATS7e, "MATS(7, 'e')"
    413, , MATS8e, "MATS(8, 'e')"
    414, , MATS1pe, "MATS(1, 'pe')"
    415, , MATS2pe, "MATS(2, 'pe')"
    416, , MATS3pe, "MATS(3, 'pe')"
    417, , MATS4pe, "MATS(4, 'pe')"
    418, , MATS5pe, "MATS(5, 'pe')"
    419, , MATS6pe, "MATS(6, 'pe')"
    420, , MATS7pe, "MATS(7, 'pe')"
    421, , MATS8pe, "MATS(8, 'pe')"
    422, , MATS1are, "MATS(1, 'are')"
    423, , MATS2are, "MATS(2, 'are')"
    424, , MATS3are, "MATS(3, 'are')"
    425, , MATS4are, "MATS(4, 'are')"
    426, , MATS5are, "MATS(5, 'are')"
    427, , MATS6are, "MATS(6, 'are')"
    428, , MATS7are, "MATS(7, 'are')"
    429, , MATS8are, "MATS(8, 'are')"
    430, , MATS1p, "MATS(1, 'p')"
    431, , MATS2p, "MATS(2, 'p')"
    432, , MATS3p, "MATS(3, 'p')"
    433, , MATS4p, "MATS(4, 'p')"
    434, , MATS5p, "MATS(5, 'p')"
    435, , MATS6p, "MATS(6, 'p')"
    436, , MATS7p, "MATS(7, 'p')"
    437, , MATS8p, "MATS(8, 'p')"
    438, , MATS1i, "MATS(1, 'i')"
    439, , MATS2i, "MATS(2, 'i')"
    440, , MATS3i, "MATS(3, 'i')"
    441, , MATS4i, "MATS(4, 'i')"
    442, , MATS5i, "MATS(5, 'i')"
    443, , MATS6i, "MATS(6, 'i')"
    444, , MATS7i, "MATS(7, 'i')"
    445, , MATS8i, "MATS(8, 'i')"
    446, , MATS1s, "MATS(1, 's')"
    447, , MATS2s, "MATS(2, 's')"
    448, , MATS3s, "MATS(3, 's')"
    449, , MATS4s, "MATS(4, 's')"
    450, , MATS5s, "MATS(5, 's')"
    451, , MATS6s, "MATS(6, 's')"
    452, , MATS7s, "MATS(7, 's')"
    453, , MATS8s, "MATS(8, 's')"
    454, , GATS1c, "GATS(1, 'c')"
    455, , GATS2c, "GATS(2, 'c')"
    456, , GATS3c, "GATS(3, 'c')"
    457, , GATS4c, "GATS(4, 'c')"
    458, , GATS5c, "GATS(5, 'c')"
    459, , GATS6c, "GATS(6, 'c')"
    460, , GATS7c, "GATS(7, 'c')"
    461, , GATS8c, "GATS(8, 'c')"
    462, , GATS1Z, "GATS(1, 'Z')"
    463, , GATS2Z, "GATS(2, 'Z')"
    464, , GATS3Z, "GATS(3, 'Z')"
    465, , GATS4Z, "GATS(4, 'Z')"
    466, , GATS5Z, "GATS(5, 'Z')"
    467, , GATS6Z, "GATS(6, 'Z')"
    468, , GATS7Z, "GATS(7, 'Z')"
    469, , GATS8Z, "GATS(8, 'Z')"
    470, , GATS1m, "GATS(1, 'm')"
    471, , GATS2m, "GATS(2, 'm')"
    472, , GATS3m, "GATS(3, 'm')"
    473, , GATS4m, "GATS(4, 'm')"
    474, , GATS5m, "GATS(5, 'm')"
    475, , GATS6m, "GATS(6, 'm')"
    476, , GATS7m, "GATS(7, 'm')"
    477, , GATS8m, "GATS(8, 'm')"
    478, , GATS1v, "GATS(1, 'v')"
    479, , GATS2v, "GATS(2, 'v')"
    480, , GATS3v, "GATS(3, 'v')"
    481, , GATS4v, "GATS(4, 'v')"
    482, , GATS5v, "GATS(5, 'v')"
    483, , GATS6v, "GATS(6, 'v')"
    484, , GATS7v, "GATS(7, 'v')"
    485, , GATS8v, "GATS(8, 'v')"
    486, , GATS1e, "GATS(1, 'e')"
    487, , GATS2e, "GATS(2, 'e')"
    488, , GATS3e, "GATS(3, 'e')"
    489, , GATS4e, "GATS(4, 'e')"
    490, , GATS5e, "GATS(5, 'e')"
    491, , GATS6e, "GATS(6, 'e')"
    492, , GATS7e, "GATS(7, 'e')"
    493, , GATS8e, "GATS(8, 'e')"
    494, , GATS1pe, "GATS(1, 'pe')"
    495, , GATS2pe, "GATS(2, 'pe')"
    496, , GATS3pe, "GATS(3, 'pe')"
    497, , GATS4pe, "GATS(4, 'pe')"
    498, , GATS5pe, "GATS(5, 'pe')"
    499, , GATS6pe, "GATS(6, 'pe')"
    500, , GATS7pe, "GATS(7, 'pe')"
    501, , GATS8pe, "GATS(8, 'pe')"
    502, , GATS1are, "GATS(1, 'are')"
    503, , GATS2are, "GATS(2, 'are')"
    504, , GATS3are, "GATS(3, 'are')"
    505, , GATS4are, "GATS(4, 'are')"
    506, , GATS5are, "GATS(5, 'are')"
    507, , GATS6are, "GATS(6, 'are')"
    508, , GATS7are, "GATS(7, 'are')"
    509, , GATS8are, "GATS(8, 'are')"
    510, , GATS1p, "GATS(1, 'p')"
    511, , GATS2p, "GATS(2, 'p')"
    512, , GATS3p, "GATS(3, 'p')"
    513, , GATS4p, "GATS(4, 'p')"
    514, , GATS5p, "GATS(5, 'p')"
    515, , GATS6p, "GATS(6, 'p')"
    516, , GATS7p, "GATS(7, 'p')"
    517, , GATS8p, "GATS(8, 'p')"
    518, , GATS1i, "GATS(1, 'i')"
    519, , GATS2i, "GATS(2, 'i')"
    520, , GATS3i, "GATS(3, 'i')"
    521, , GATS4i, "GATS(4, 'i')"
    522, , GATS5i, "GATS(5, 'i')"
    523, , GATS6i, "GATS(6, 'i')"
    524, , GATS7i, "GATS(7, 'i')"
    525, , GATS8i, "GATS(8, 'i')"
    526, , GATS1s, "GATS(1, 's')"
    527, , GATS2s, "GATS(2, 's')"
    528, , GATS3s, "GATS(3, 's')"
    529, , GATS4s, "GATS(4, 's')"
    530, , GATS5s, "GATS(5, 's')"
    531, , GATS6s, "GATS(6, 's')"
    532, , GATS7s, "GATS(7, 's')"
    533, , GATS8s, "GATS(8, 's')"
    534, BCUT, BCUTc-1h, "BCUT('c', 0)"
    535, , BCUTc-1l, "BCUT('c', -1)"
    536, , BCUTZ-1h, "BCUT('Z', 0)"
    537, , BCUTZ-1l, "BCUT('Z', -1)"
    538, , BCUTm-1h, "BCUT('m', 0)"
    539, , BCUTm-1l, "BCUT('m', -1)"
    540, , BCUTv-1h, "BCUT('v', 0)"
    541, , BCUTv-1l, "BCUT('v', -1)"
    542, , BCUTe-1h, "BCUT('e', 0)"
    543, , BCUTe-1l, "BCUT('e', -1)"
    544, , BCUTpe-1h, "BCUT('pe', 0)"
    545, , BCUTpe-1l, "BCUT('pe', -1)"
    546, , BCUTare-1h, "BCUT('are', 0)"
    547, , BCUTare-1l, "BCUT('are', -1)"
    548, , BCUTp-1h, "BCUT('p', 0)"
    549, , BCUTp-1l, "BCUT('p', -1)"
    550, , BCUTi-1h, "BCUT('i', 0)"
    551, , BCUTi-1l, "BCUT('i', -1)"
    552, , BCUTs-1h, "BCUT('s', 0)"
    553, , BCUTs-1l, "BCUT('s', -1)"
    554, BaryszMatrix, SpAbs_DzZ, "BaryszMatrix('Z', 'SpAbs')"
    555, , SpMax_DzZ, "BaryszMatrix('Z', 'SpMax')"
    556, , SpDiam_DzZ, "BaryszMatrix('Z', 'SpDiam')"
    557, , SpAD_DzZ, "BaryszMatrix('Z', 'SpAD')"
    558, , SpMAD_DzZ, "BaryszMatrix('Z', 'SpMAD')"
    559, , LogEE_DzZ, "BaryszMatrix('Z', 'LogEE')"
    560, , SM1_DzZ, "BaryszMatrix('Z', 'SM1')"
    561, , VE1_DzZ, "BaryszMatrix('Z', 'VE1')"
    562, , VE2_DzZ, "BaryszMatrix('Z', 'VE2')"
    563, , VE3_DzZ, "BaryszMatrix('Z', 'VE3')"
    564, , VR1_DzZ, "BaryszMatrix('Z', 'VR1')"
    565, , VR2_DzZ, "BaryszMatrix('Z', 'VR2')"
    566, , VR3_DzZ, "BaryszMatrix('Z', 'VR3')"
    567, , SpAbs_Dzm, "BaryszMatrix('m', 'SpAbs')"
    568, , SpMax_Dzm, "BaryszMatrix('m', 'SpMax')"
    569, , SpDiam_Dzm, "BaryszMatrix('m', 'SpDiam')"
    570, , SpAD_Dzm, "BaryszMatrix('m', 'SpAD')"
    571, , SpMAD_Dzm, "BaryszMatrix('m', 'SpMAD')"
    572, , LogEE_Dzm, "BaryszMatrix('m', 'LogEE')"
    573, , SM1_Dzm, "BaryszMatrix('m', 'SM1')"
    574, , VE1_Dzm, "BaryszMatrix('m', 'VE1')"
    575, , VE2_Dzm, "BaryszMatrix('m', 'VE2')"
    576, , VE3_Dzm, "BaryszMatrix('m', 'VE3')"
    577, , VR1_Dzm, "BaryszMatrix('m', 'VR1')"
    578, , VR2_Dzm, "BaryszMatrix('m', 'VR2')"
    579, , VR3_Dzm, "BaryszMatrix('m', 'VR3')"
    580, , SpAbs_Dzv, "BaryszMatrix('v', 'SpAbs')"
    581, , SpMax_Dzv, "BaryszMatrix('v', 'SpMax')"
    582, , SpDiam_Dzv, "BaryszMatrix('v', 'SpDiam')"
    583, , SpAD_Dzv, "BaryszMatrix('v', 'SpAD')"
    584, , SpMAD_Dzv, "BaryszMatrix('v', 'SpMAD')"
    585, , LogEE_Dzv, "BaryszMatrix('v', 'LogEE')"
    586, , SM1_Dzv, "BaryszMatrix('v', 'SM1')"
    587, , VE1_Dzv, "BaryszMatrix('v', 'VE1')"
    588, , VE2_Dzv, "BaryszMatrix('v', 'VE2')"
    589, , VE3_Dzv, "BaryszMatrix('v', 'VE3')"
    590, , VR1_Dzv, "BaryszMatrix('v', 'VR1')"
    591, , VR2_Dzv, "BaryszMatrix('v', 'VR2')"
    592, , VR3_Dzv, "BaryszMatrix('v', 'VR3')"
    593, , SpAbs_Dze, "BaryszMatrix('e', 'SpAbs')"
    594, , SpMax_Dze, "BaryszMatrix('e', 'SpMax')"
    595, , SpDiam_Dze, "BaryszMatrix('e', 'SpDiam')"
    596, , SpAD_Dze, "BaryszMatrix('e', 'SpAD')"
    597, , SpMAD_Dze, "BaryszMatrix('e', 'SpMAD')"
    598, , LogEE_Dze, "BaryszMatrix('e', 'LogEE')"
    599, , SM1_Dze, "BaryszMatrix('e', 'SM1')"
    600, , VE1_Dze, "BaryszMatrix('e', 'VE1')"
    601, , VE2_Dze, "BaryszMatrix('e', 'VE2')"
    602, , VE3_Dze, "BaryszMatrix('e', 'VE3')"
    603, , VR1_Dze, "BaryszMatrix('e', 'VR1')"
    604, , VR2_Dze, "BaryszMatrix('e', 'VR2')"
    605, , VR3_Dze, "BaryszMatrix('e', 'VR3')"
    606, , SpAbs_Dzpe, "BaryszMatrix('pe', 'SpAbs')"
    607, , SpMax_Dzpe, "BaryszMatrix('pe', 'SpMax')"
    608, , SpDiam_Dzpe, "BaryszMatrix('pe', 'SpDiam')"
    609, , SpAD_Dzpe, "BaryszMatrix('pe', 'SpAD')"
    610, , SpMAD_Dzpe, "BaryszMatrix('pe', 'SpMAD')"
    611, , LogEE_Dzpe, "BaryszMatrix('pe', 'LogEE')"
    612, , SM1_Dzpe, "BaryszMatrix('pe', 'SM1')"
    613, , VE1_Dzpe, "BaryszMatrix('pe', 'VE1')"
    614, , VE2_Dzpe, "BaryszMatrix('pe', 'VE2')"
    615, , VE3_Dzpe, "BaryszMatrix('pe', 'VE3')"
    616, , VR1_Dzpe, "BaryszMatrix('pe', 'VR1')"
    617, , VR2_Dzpe, "BaryszMatrix('pe', 'VR2')"
    618, , VR3_Dzpe, "BaryszMatrix('pe', 'VR3')"
    619, , SpAbs_Dzare, "BaryszMatrix('are', 'SpAbs')"
    620, , SpMax_Dzare, "BaryszMatrix('are', 'SpMax')"
    621, , SpDiam_Dzare, "BaryszMatrix('are', 'SpDiam')"
    622, , SpAD_Dzare, "BaryszMatrix('are', 'SpAD')"
    623, , SpMAD_Dzare, "BaryszMatrix('are', 'SpMAD')"
    624, , LogEE_Dzare, "BaryszMatrix('are', 'LogEE')"
    625, , SM1_Dzare, "BaryszMatrix('are', 'SM1')"
    626, , VE1_Dzare, "BaryszMatrix('are', 'VE1')"
    627, , VE2_Dzare, "BaryszMatrix('are', 'VE2')"
    628, , VE3_Dzare, "BaryszMatrix('are', 'VE3')"
    629, , VR1_Dzare, "BaryszMatrix('are', 'VR1')"
    630, , VR2_Dzare, "BaryszMatrix('are', 'VR2')"
    631, , VR3_Dzare, "BaryszMatrix('are', 'VR3')"
    632, , SpAbs_Dzp, "BaryszMatrix('p', 'SpAbs')"
    633, , SpMax_Dzp, "BaryszMatrix('p', 'SpMax')"
    634, , SpDiam_Dzp, "BaryszMatrix('p', 'SpDiam')"
    635, , SpAD_Dzp, "BaryszMatrix('p', 'SpAD')"
    636, , SpMAD_Dzp, "BaryszMatrix('p', 'SpMAD')"
    637, , LogEE_Dzp, "BaryszMatrix('p', 'LogEE')"
    638, , SM1_Dzp, "BaryszMatrix('p', 'SM1')"
    639, , VE1_Dzp, "BaryszMatrix('p', 'VE1')"
    640, , VE2_Dzp, "BaryszMatrix('p', 'VE2')"
    641, , VE3_Dzp, "BaryszMatrix('p', 'VE3')"
    642, , VR1_Dzp, "BaryszMatrix('p', 'VR1')"
    643, , VR2_Dzp, "BaryszMatrix('p', 'VR2')"
    644, , VR3_Dzp, "BaryszMatrix('p', 'VR3')"
    645, , SpAbs_Dzi, "BaryszMatrix('i', 'SpAbs')"
    646, , SpMax_Dzi, "BaryszMatrix('i', 'SpMax')"
    647, , SpDiam_Dzi, "BaryszMatrix('i', 'SpDiam')"
    648, , SpAD_Dzi, "BaryszMatrix('i', 'SpAD')"
    649, , SpMAD_Dzi, "BaryszMatrix('i', 'SpMAD')"
    650, , LogEE_Dzi, "BaryszMatrix('i', 'LogEE')"
    651, , SM1_Dzi, "BaryszMatrix('i', 'SM1')"
    652, , VE1_Dzi, "BaryszMatrix('i', 'VE1')"
    653, , VE2_Dzi, "BaryszMatrix('i', 'VE2')"
    654, , VE3_Dzi, "BaryszMatrix('i', 'VE3')"
    655, , VR1_Dzi, "BaryszMatrix('i', 'VR1')"
    656, , VR2_Dzi, "BaryszMatrix('i', 'VR2')"
    657, , VR3_Dzi, "BaryszMatrix('i', 'VR3')"
    658, BondCount, nBonds, "BondCount('any', False)"
    659, , nBondsO, "BondCount('heavy', False)"
    660, , nBondsS, "BondCount('single', False)"
    661, , nBondsD, "BondCount('double', False)"
    662, , nBondsT, "BondCount('triple', False)"
    663, , nBondsA, "BondCount('aromatic', False)"
    664, , nBondsM, "BondCount('multiple', False)"
    665, , nBondsKS, "BondCount('single', True)"
    666, , nBondsKD, "BondCount('double', True)"
    667, CarbonTypes, C1SP1, "CarbonTypes(1, 1)"
    668, , C2SP1, "CarbonTypes(2, 1)"
    669, , C1SP2, "CarbonTypes(1, 2)"
    670, , C2SP2, "CarbonTypes(2, 2)"
    671, , C3SP2, "CarbonTypes(3, 2)"
    672, , C1SP3, "CarbonTypes(1, 3)"
    673, , C2SP3, "CarbonTypes(2, 3)"
    674, , C3SP3, "CarbonTypes(3, 3)"
    675, , C4SP3, "CarbonTypes(4, 3)"
    676, , HybRatio, "HybridizationRatio()"
    677, Chi, SCH-3, "Chi('chain', 3, 'delta', False)"
    678, , SCH-4, "Chi('chain', 4, 'delta', False)"
    679, , SCH-5, "Chi('chain', 5, 'delta', False)"
    680, , SCH-6, "Chi('chain', 6, 'delta', False)"
    681, , SCH-7, "Chi('chain', 7, 'delta', False)"
    682, , VCH-3, "Chi('chain', 3, 'delta_v', False)"
    683, , VCH-4, "Chi('chain', 4, 'delta_v', False)"
    684, , VCH-5, "Chi('chain', 5, 'delta_v', False)"
    685, , VCH-6, "Chi('chain', 6, 'delta_v', False)"
    686, , VCH-7, "Chi('chain', 7, 'delta_v', False)"
    687, , SC-3, "Chi('cluster', 3, 'delta', False)"
    688, , SC-4, "Chi('cluster', 4, 'delta', False)"
    689, , SC-5, "Chi('cluster', 5, 'delta', False)"
    690, , SC-6, "Chi('cluster', 6, 'delta', False)"
    691, , VC-3, "Chi('cluster', 3, 'delta_v', False)"
    692, , VC-4, "Chi('cluster', 4, 'delta_v', False)"
    693, , VC-5, "Chi('cluster', 5, 'delta_v', False)"
    694, , VC-6, "Chi('cluster', 6, 'delta_v', False)"
    695, , SPC-4, "Chi('path_cluster', 4, 'delta', False)"
    696, , SPC-5, "Chi('path_cluster', 5, 'delta', False)"
    697, , SPC-6, "Chi('path_cluster', 6, 'delta', False)"
    698, , VPC-4, "Chi('path_cluster', 4, 'delta_v', False)"
    699, , VPC-5, "Chi('path_cluster', 5, 'delta_v', False)"
    700, , VPC-6, "Chi('path_cluster', 6, 'delta_v', False)"
    701, , SP-0, "Chi('path', 0, 'delta', False)"
    702, , SP-1, "Chi('path', 1, 'delta', False)"
    703, , SP-2, "Chi('path', 2, 'delta', False)"
    704, , SP-3, "Chi('path', 3, 'delta', False)"
    705, , SP-4, "Chi('path', 4, 'delta', False)"
    706, , SP-5, "Chi('path', 5, 'delta', False)"
    707, , SP-6, "Chi('path', 6, 'delta', False)"
    708, , SP-7, "Chi('path', 7, 'delta', False)"
    709, , ASP-0, "Chi('path', 0, 'delta', True)"
    710, , ASP-1, "Chi('path', 1, 'delta', True)"
    711, , ASP-2, "Chi('path', 2, 'delta', True)"
    712, , ASP-3, "Chi('path', 3, 'delta', True)"
    713, , ASP-4, "Chi('path', 4, 'delta', True)"
    714, , ASP-5, "Chi('path', 5, 'delta', True)"
    715, , ASP-6, "Chi('path', 6, 'delta', True)"
    716, , ASP-7, "Chi('path', 7, 'delta', True)"
    717, , VP-0, "Chi('path', 0, 'delta_v', False)"
    718, , VP-1, "Chi('path', 1, 'delta_v', False)"
    719, , VP-2, "Chi('path', 2, 'delta_v', False)"
    720, , VP-3, "Chi('path', 3, 'delta_v', False)"
    721, , VP-4, "Chi('path', 4, 'delta_v', False)"
    722, , VP-5, "Chi('path', 5, 'delta_v', False)"
    723, , VP-6, "Chi('path', 6, 'delta_v', False)"
    724, , VP-7, "Chi('path', 7, 'delta_v', False)"
    725, , AVP-0, "Chi('path', 0, 'delta_v', True)"
    726, , AVP-1, "Chi('path', 1, 'delta_v', True)"
    727, , AVP-2, "Chi('path', 2, 'delta_v', True)"
    728, , AVP-3, "Chi('path', 3, 'delta_v', True)"
    729, , AVP-4, "Chi('path', 4, 'delta_v', True)"
    730, , AVP-5, "Chi('path', 5, 'delta_v', True)"
    731, , AVP-6, "Chi('path', 6, 'delta_v', True)"
    732, , AVP-7, "Chi('path', 7, 'delta_v', True)"
    733, Constitutional, SZ, "ConstitutionalSum('Z')"
    734, , Sm, "ConstitutionalSum('m')"
    735, , Sv, "ConstitutionalSum('v')"
    736, , Sse, "ConstitutionalSum('e')"
    737, , Spe, "ConstitutionalSum('pe')"
    738, , Sare, "ConstitutionalSum('are')"
    739, , Sp, "ConstitutionalSum('p')"
    740, , Si, "ConstitutionalSum('i')"
    741, , MZ, "ConstitutionalMean('Z')"
    742, , Mm, "ConstitutionalMean('m')"
    743, , Mv, "ConstitutionalMean('v')"
    744, , Mse, "ConstitutionalMean('e')"
    745, , Mpe, "ConstitutionalMean('pe')"
    746, , Mare, "ConstitutionalMean('are')"
    747, , Mp, "ConstitutionalMean('p')"
    748, , Mi, "ConstitutionalMean('i')"
    749, DetourMatrix, DetourIndex, "DetourIndex()"
    750, , SpAbs_Dt, "DetourMatrix('SpAbs')"
    751, , SpMax_Dt, "DetourMatrix('SpMax')"
    752, , SpDiam_Dt, "DetourMatrix('SpDiam')"
    753, , SpAD_Dt, "DetourMatrix('SpAD')"
    754, , SpMAD_Dt, "DetourMatrix('SpMAD')"
    755, , LogEE_Dt, "DetourMatrix('LogEE')"
    756, , SM1_Dt, "DetourMatrix('SM1')"
    757, , VE1_Dt, "DetourMatrix('VE1')"
    758, , VE2_Dt, "DetourMatrix('VE2')"
    759, , VE3_Dt, "DetourMatrix('VE3')"
    760, , VR1_Dt, "DetourMatrix('VR1')"
    761, , VR2_Dt, "DetourMatrix('VR2')"
    762, , VR3_Dt, "DetourMatrix('VR3')"
    763, DistanceMatrix, SpAbs_D, "DistanceMatrix('SpAbs')"
    764, , SpMax_D, "DistanceMatrix('SpMax')"
    765, , SpDiam_D, "DistanceMatrix('SpDiam')"
    766, , SpAD_D, "DistanceMatrix('SpAD')"
    767, , SpMAD_D, "DistanceMatrix('SpMAD')"
    768, , LogEE_D, "DistanceMatrix('LogEE')"
    769, , SM1_D, "DistanceMatrix('SM1')"
    770, , VE1_D, "DistanceMatrix('VE1')"
    771, , VE2_D, "DistanceMatrix('VE2')"
    772, , VE3_D, "DistanceMatrix('VE3')"
    773, , VR1_D, "DistanceMatrix('VR1')"
    774, , VR2_D, "DistanceMatrix('VR2')"
    775, , VR3_D, "DistanceMatrix('VR3')"
    776, EState, NsLi, "AtomTypeEState('count', 'sLi')"
    777, , NssBe, "AtomTypeEState('count', 'ssBe')"
    778, , NssssBe, "AtomTypeEState('count', 'ssssBe')"
    779, , NssBH, "AtomTypeEState('count', 'ssBH')"
    780, , NsssB, "AtomTypeEState('count', 'sssB')"
    781, , NssssB, "AtomTypeEState('count', 'ssssB')"
    782, , NsCH3, "AtomTypeEState('count', 'sCH3')"
    783, , NdCH2, "AtomTypeEState('count', 'dCH2')"
    784, , NssCH2, "AtomTypeEState('count', 'ssCH2')"
    785, , NtCH, "AtomTypeEState('count', 'tCH')"
    786, , NdsCH, "AtomTypeEState('count', 'dsCH')"
    787, , NaaCH, "AtomTypeEState('count', 'aaCH')"
    788, , NsssCH, "AtomTypeEState('count', 'sssCH')"
    789, , NddC, "AtomTypeEState('count', 'ddC')"
    790, , NtsC, "AtomTypeEState('count', 'tsC')"
    791, , NdssC, "AtomTypeEState('count', 'dssC')"
    792, , NaasC, "AtomTypeEState('count', 'aasC')"
    793, , NaaaC, "AtomTypeEState('count', 'aaaC')"
    794, , NssssC, "AtomTypeEState('count', 'ssssC')"
    795, , NsNH3, "AtomTypeEState('count', 'sNH3')"
    796, , NsNH2, "AtomTypeEState('count', 'sNH2')"
    797, , NssNH2, "AtomTypeEState('count', 'ssNH2')"
    798, , NdNH, "AtomTypeEState('count', 'dNH')"
    799, , NssNH, "AtomTypeEState('count', 'ssNH')"
    800, , NaaNH, "AtomTypeEState('count', 'aaNH')"
    801, , NtN, "AtomTypeEState('count', 'tN')"
    802, , NsssNH, "AtomTypeEState('count', 'sssNH')"
    803, , NdsN, "AtomTypeEState('count', 'dsN')"
    804, , NaaN, "AtomTypeEState('count', 'aaN')"
    805, , NsssN, "AtomTypeEState('count', 'sssN')"
    806, , NddsN, "AtomTypeEState('count', 'ddsN')"
    807, , NaasN, "AtomTypeEState('count', 'aasN')"
    808, , NssssN, "AtomTypeEState('count', 'ssssN')"
    809, , NsOH, "AtomTypeEState('count', 'sOH')"
    810, , NdO, "AtomTypeEState('count', 'dO')"
    811, , NssO, "AtomTypeEState('count', 'ssO')"
    812, , NaaO, "AtomTypeEState('count', 'aaO')"
    813, , NsF, "AtomTypeEState('count', 'sF')"
    814, , NsSiH3, "AtomTypeEState('count', 'sSiH3')"
    815, , NssSiH2, "AtomTypeEState('count', 'ssSiH2')"
    816, , NsssSiH, "AtomTypeEState('count', 'sssSiH')"
    817, , NssssSi, "AtomTypeEState('count', 'ssssSi')"
    818, , NsPH2, "AtomTypeEState('count', 'sPH2')"
    819, , NssPH, "AtomTypeEState('count', 'ssPH')"
    820, , NsssP, "AtomTypeEState('count', 'sssP')"
    821, , NdsssP, "AtomTypeEState('count', 'dsssP')"
    822, , NsssssP, "AtomTypeEState('count', 'sssssP')"
    823, , NsSH, "AtomTypeEState('count', 'sSH')"
    824, , NdS, "AtomTypeEState('count', 'dS')"
    825, , NssS, "AtomTypeEState('count', 'ssS')"
    826, , NaaS, "AtomTypeEState('count', 'aaS')"
    827, , NdssS, "AtomTypeEState('count', 'dssS')"
    828, , NddssS, "AtomTypeEState('count', 'ddssS')"
    829, , NsCl, "AtomTypeEState('count', 'sCl')"
    830, , NsGeH3, "AtomTypeEState('count', 'sGeH3')"
    831, , NssGeH2, "AtomTypeEState('count', 'ssGeH2')"
    832, , NsssGeH, "AtomTypeEState('count', 'sssGeH')"
    833, , NssssGe, "AtomTypeEState('count', 'ssssGe')"
    834, , NsAsH2, "AtomTypeEState('count', 'sAsH2')"
    835, , NssAsH, "AtomTypeEState('count', 'ssAsH')"
    836, , NsssAs, "AtomTypeEState('count', 'sssAs')"
    837, , NsssdAs, "AtomTypeEState('count', 'sssdAs')"
    838, , NsssssAs, "AtomTypeEState('count', 'sssssAs')"
    839, , NsSeH, "AtomTypeEState('count', 'sSeH')"
    840, , NdSe, "AtomTypeEState('count', 'dSe')"
    841, , NssSe, "AtomTypeEState('count', 'ssSe')"
    842, , NaaSe, "AtomTypeEState('count', 'aaSe')"
    843, , NdssSe, "AtomTypeEState('count', 'dssSe')"
    844, , NddssSe, "AtomTypeEState('count', 'ddssSe')"
    845, , NsBr, "AtomTypeEState('count', 'sBr')"
    846, , NsSnH3, "AtomTypeEState('count', 'sSnH3')"
    847, , NssSnH2, "AtomTypeEState('count', 'ssSnH2')"
    848, , NsssSnH, "AtomTypeEState('count', 'sssSnH')"
    849, , NssssSn, "AtomTypeEState('count', 'ssssSn')"
    850, , NsI, "AtomTypeEState('count', 'sI')"
    851, , NsPbH3, "AtomTypeEState('count', 'sPbH3')"
    852, , NssPbH2, "AtomTypeEState('count', 'ssPbH2')"
    853, , NsssPbH, "AtomTypeEState('count', 'sssPbH')"
    854, , NssssPb, "AtomTypeEState('count', 'ssssPb')"
    855, , SsLi, "AtomTypeEState('sum', 'sLi')"
    856, , SssBe, "AtomTypeEState('sum', 'ssBe')"
    857, , SssssBe, "AtomTypeEState('sum', 'ssssBe')"
    858, , SssBH, "AtomTypeEState('sum', 'ssBH')"
    859, , SsssB, "AtomTypeEState('sum', 'sssB')"
    860, , SssssB, "AtomTypeEState('sum', 'ssssB')"
    861, , SsCH3, "AtomTypeEState('sum', 'sCH3')"
    862, , SdCH2, "AtomTypeEState('sum', 'dCH2')"
    863, , SssCH2, "AtomTypeEState('sum', 'ssCH2')"
    864, , StCH, "AtomTypeEState('sum', 'tCH')"
    865, , SdsCH, "AtomTypeEState('sum', 'dsCH')"
    866, , SaaCH, "AtomTypeEState('sum', 'aaCH')"
    867, , SsssCH, "AtomTypeEState('sum', 'sssCH')"
    868, , SddC, "AtomTypeEState('sum', 'ddC')"
    869, , StsC, "AtomTypeEState('sum', 'tsC')"
    870, , SdssC, "AtomTypeEState('sum', 'dssC')"
    871, , SaasC, "AtomTypeEState('sum', 'aasC')"
    872, , SaaaC, "AtomTypeEState('sum', 'aaaC')"
    873, , SssssC, "AtomTypeEState('sum', 'ssssC')"
    874, , SsNH3, "AtomTypeEState('sum', 'sNH3')"
    875, , SsNH2, "AtomTypeEState('sum', 'sNH2')"
    876, , SssNH2, "AtomTypeEState('sum', 'ssNH2')"
    877, , SdNH, "AtomTypeEState('sum', 'dNH')"
    878, , SssNH, "AtomTypeEState('sum', 'ssNH')"
    879, , SaaNH, "AtomTypeEState('sum', 'aaNH')"
    880, , StN, "AtomTypeEState('sum', 'tN')"
    881, , SsssNH, "AtomTypeEState('sum', 'sssNH')"
    882, , SdsN, "AtomTypeEState('sum', 'dsN')"
    883, , SaaN, "AtomTypeEState('sum', 'aaN')"
    884, , SsssN, "AtomTypeEState('sum', 'sssN')"
    885, , SddsN, "AtomTypeEState('sum', 'ddsN')"
    886, , SaasN, "AtomTypeEState('sum', 'aasN')"
    887, , SssssN, "AtomTypeEState('sum', 'ssssN')"
    888, , SsOH, "AtomTypeEState('sum', 'sOH')"
    889, , SdO, "AtomTypeEState('sum', 'dO')"
    890, , SssO, "AtomTypeEState('sum', 'ssO')"
    891, , SaaO, "AtomTypeEState('sum', 'aaO')"
    892, , SsF, "AtomTypeEState('sum', 'sF')"
    893, , SsSiH3, "AtomTypeEState('sum', 'sSiH3')"
    894, , SssSiH2, "AtomTypeEState('sum', 'ssSiH2')"
    895, , SsssSiH, "AtomTypeEState('sum', 'sssSiH')"
    896, , SssssSi, "AtomTypeEState('sum', 'ssssSi')"
    897, , SsPH2, "AtomTypeEState('sum', 'sPH2')"
    898, , SssPH, "AtomTypeEState('sum', 'ssPH')"
    899, , SsssP, "AtomTypeEState('sum', 'sssP')"
    900, , SdsssP, "AtomTypeEState('sum', 'dsssP')"
    901, , SsssssP, "AtomTypeEState('sum', 'sssssP')"
    902, , SsSH, "AtomTypeEState('sum', 'sSH')"
    903, , SdS, "AtomTypeEState('sum', 'dS')"
    904, , SssS, "AtomTypeEState('sum', 'ssS')"
    905, , SaaS, "AtomTypeEState('sum', 'aaS')"
    906, , SdssS, "AtomTypeEState('sum', 'dssS')"
    907, , SddssS, "AtomTypeEState('sum', 'ddssS')"
    908, , SsCl, "AtomTypeEState('sum', 'sCl')"
    909, , SsGeH3, "AtomTypeEState('sum', 'sGeH3')"
    910, , SssGeH2, "AtomTypeEState('sum', 'ssGeH2')"
    911, , SsssGeH, "AtomTypeEState('sum', 'sssGeH')"
    912, , SssssGe, "AtomTypeEState('sum', 'ssssGe')"
    913, , SsAsH2, "AtomTypeEState('sum', 'sAsH2')"
    914, , SssAsH, "AtomTypeEState('sum', 'ssAsH')"
    915, , SsssAs, "AtomTypeEState('sum', 'sssAs')"
    916, , SsssdAs, "AtomTypeEState('sum', 'sssdAs')"
    917, , SsssssAs, "AtomTypeEState('sum', 'sssssAs')"
    918, , SsSeH, "AtomTypeEState('sum', 'sSeH')"
    919, , SdSe, "AtomTypeEState('sum', 'dSe')"
    920, , SssSe, "AtomTypeEState('sum', 'ssSe')"
    921, , SaaSe, "AtomTypeEState('sum', 'aaSe')"
    922, , SdssSe, "AtomTypeEState('sum', 'dssSe')"
    923, , SddssSe, "AtomTypeEState('sum', 'ddssSe')"
    924, , SsBr, "AtomTypeEState('sum', 'sBr')"
    925, , SsSnH3, "AtomTypeEState('sum', 'sSnH3')"
    926, , SssSnH2, "AtomTypeEState('sum', 'ssSnH2')"
    927, , SsssSnH, "AtomTypeEState('sum', 'sssSnH')"
    928, , SssssSn, "AtomTypeEState('sum', 'ssssSn')"
    929, , SsI, "AtomTypeEState('sum', 'sI')"
    930, , SsPbH3, "AtomTypeEState('sum', 'sPbH3')"
    931, , SssPbH2, "AtomTypeEState('sum', 'ssPbH2')"
    932, , SsssPbH, "AtomTypeEState('sum', 'sssPbH')"
    933, , SssssPb, "AtomTypeEState('sum', 'ssssPb')"
    934, , MAXsLi, "AtomTypeEState('max', 'sLi')"
    935, , MAXssBe, "AtomTypeEState('max', 'ssBe')"
    936, , MAXssssBe, "AtomTypeEState('max', 'ssssBe')"
    937, , MAXssBH, "AtomTypeEState('max', 'ssBH')"
    938, , MAXsssB, "AtomTypeEState('max', 'sssB')"
    939, , MAXssssB, "AtomTypeEState('max', 'ssssB')"
    940, , MAXsCH3, "AtomTypeEState('max', 'sCH3')"
    941, , MAXdCH2, "AtomTypeEState('max', 'dCH2')"
    942, , MAXssCH2, "AtomTypeEState('max', 'ssCH2')"
    943, , MAXtCH, "AtomTypeEState('max', 'tCH')"
    944, , MAXdsCH, "AtomTypeEState('max', 'dsCH')"
    945, , MAXaaCH, "AtomTypeEState('max', 'aaCH')"
    946, , MAXsssCH, "AtomTypeEState('max', 'sssCH')"
    947, , MAXddC, "AtomTypeEState('max', 'ddC')"
    948, , MAXtsC, "AtomTypeEState('max', 'tsC')"
    949, , MAXdssC, "AtomTypeEState('max', 'dssC')"
    950, , MAXaasC, "AtomTypeEState('max', 'aasC')"
    951, , MAXaaaC, "AtomTypeEState('max', 'aaaC')"
    952, , MAXssssC, "AtomTypeEState('max', 'ssssC')"
    953, , MAXsNH3, "AtomTypeEState('max', 'sNH3')"
    954, , MAXsNH2, "AtomTypeEState('max', 'sNH2')"
    955, , MAXssNH2, "AtomTypeEState('max', 'ssNH2')"
    956, , MAXdNH, "AtomTypeEState('max', 'dNH')"
    957, , MAXssNH, "AtomTypeEState('max', 'ssNH')"
    958, , MAXaaNH, "AtomTypeEState('max', 'aaNH')"
    959, , MAXtN, "AtomTypeEState('max', 'tN')"
    960, , MAXsssNH, "AtomTypeEState('max', 'sssNH')"
    961, , MAXdsN, "AtomTypeEState('max', 'dsN')"
    962, , MAXaaN, "AtomTypeEState('max', 'aaN')"
    963, , MAXsssN, "AtomTypeEState('max', 'sssN')"
    964, , MAXddsN, "AtomTypeEState('max', 'ddsN')"
    965, , MAXaasN, "AtomTypeEState('max', 'aasN')"
    966, , MAXssssN, "AtomTypeEState('max', 'ssssN')"
    967, , MAXsOH, "AtomTypeEState('max', 'sOH')"
    968, , MAXdO, "AtomTypeEState('max', 'dO')"
    969, , MAXssO, "AtomTypeEState('max', 'ssO')"
    970, , MAXaaO, "AtomTypeEState('max', 'aaO')"
    971, , MAXsF, "AtomTypeEState('max', 'sF')"
    972, , MAXsSiH3, "AtomTypeEState('max', 'sSiH3')"
    973, , MAXssSiH2, "AtomTypeEState('max', 'ssSiH2')"
    974, , MAXsssSiH, "AtomTypeEState('max', 'sssSiH')"
    975, , MAXssssSi, "AtomTypeEState('max', 'ssssSi')"
    976, , MAXsPH2, "AtomTypeEState('max', 'sPH2')"
    977, , MAXssPH, "AtomTypeEState('max', 'ssPH')"
    978, , MAXsssP, "AtomTypeEState('max', 'sssP')"
    979, , MAXdsssP, "AtomTypeEState('max', 'dsssP')"
    980, , MAXsssssP, "AtomTypeEState('max', 'sssssP')"
    981, , MAXsSH, "AtomTypeEState('max', 'sSH')"
    982, , MAXdS, "AtomTypeEState('max', 'dS')"
    983, , MAXssS, "AtomTypeEState('max', 'ssS')"
    984, , MAXaaS, "AtomTypeEState('max', 'aaS')"
    985, , MAXdssS, "AtomTypeEState('max', 'dssS')"
    986, , MAXddssS, "AtomTypeEState('max', 'ddssS')"
    987, , MAXsCl, "AtomTypeEState('max', 'sCl')"
    988, , MAXsGeH3, "AtomTypeEState('max', 'sGeH3')"
    989, , MAXssGeH2, "AtomTypeEState('max', 'ssGeH2')"
    990, , MAXsssGeH, "AtomTypeEState('max', 'sssGeH')"
    991, , MAXssssGe, "AtomTypeEState('max', 'ssssGe')"
    992, , MAXsAsH2, "AtomTypeEState('max', 'sAsH2')"
    993, , MAXssAsH, "AtomTypeEState('max', 'ssAsH')"
    994, , MAXsssAs, "AtomTypeEState('max', 'sssAs')"
    995, , MAXsssdAs, "AtomTypeEState('max', 'sssdAs')"
    996, , MAXsssssAs, "AtomTypeEState('max', 'sssssAs')"
    997, , MAXsSeH, "AtomTypeEState('max', 'sSeH')"
    998, , MAXdSe, "AtomTypeEState('max', 'dSe')"
    999, , MAXssSe, "AtomTypeEState('max', 'ssSe')"
    1000, , MAXaaSe, "AtomTypeEState('max', 'aaSe')"
    1001, , MAXdssSe, "AtomTypeEState('max', 'dssSe')"
    1002, , MAXddssSe, "AtomTypeEState('max', 'ddssSe')"
    1003, , MAXsBr, "AtomTypeEState('max', 'sBr')"
    1004, , MAXsSnH3, "AtomTypeEState('max', 'sSnH3')"
    1005, , MAXssSnH2, "AtomTypeEState('max', 'ssSnH2')"
    1006, , MAXsssSnH, "AtomTypeEState('max', 'sssSnH')"
    1007, , MAXssssSn, "AtomTypeEState('max', 'ssssSn')"
    1008, , MAXsI, "AtomTypeEState('max', 'sI')"
    1009, , MAXsPbH3, "AtomTypeEState('max', 'sPbH3')"
    1010, , MAXssPbH2, "AtomTypeEState('max', 'ssPbH2')"
    1011, , MAXsssPbH, "AtomTypeEState('max', 'sssPbH')"
    1012, , MAXssssPb, "AtomTypeEState('max', 'ssssPb')"
    1013, , MINsLi, "AtomTypeEState('min', 'sLi')"
    1014, , MINssBe, "AtomTypeEState('min', 'ssBe')"
    1015, , MINssssBe, "AtomTypeEState('min', 'ssssBe')"
    1016, , MINssBH, "AtomTypeEState('min', 'ssBH')"
    1017, , MINsssB, "AtomTypeEState('min', 'sssB')"
    1018, , MINssssB, "AtomTypeEState('min', 'ssssB')"
    1019, , MINsCH3, "AtomTypeEState('min', 'sCH3')"
    1020, , MINdCH2, "AtomTypeEState('min', 'dCH2')"
    1021, , MINssCH2, "AtomTypeEState('min', 'ssCH2')"
    1022, , MINtCH, "AtomTypeEState('min', 'tCH')"
    1023, , MINdsCH, "AtomTypeEState('min', 'dsCH')"
    1024, , MINaaCH, "AtomTypeEState('min', 'aaCH')"
    1025, , MINsssCH, "AtomTypeEState('min', 'sssCH')"
    1026, , MINddC, "AtomTypeEState('min', 'ddC')"
    1027, , MINtsC, "AtomTypeEState('min', 'tsC')"
    1028, , MINdssC, "AtomTypeEState('min', 'dssC')"
    1029, , MINaasC, "AtomTypeEState('min', 'aasC')"
    1030, , MINaaaC, "AtomTypeEState('min', 'aaaC')"
    1031, , MINssssC, "AtomTypeEState('min', 'ssssC')"
    1032, , MINsNH3, "AtomTypeEState('min', 'sNH3')"
    1033, , MINsNH2, "AtomTypeEState('min', 'sNH2')"
    1034, , MINssNH2, "AtomTypeEState('min', 'ssNH2')"
    1035, , MINdNH, "AtomTypeEState('min', 'dNH')"
    1036, , MINssNH, "AtomTypeEState('min', 'ssNH')"
    1037, , MINaaNH, "AtomTypeEState('min', 'aaNH')"
    1038, , MINtN, "AtomTypeEState('min', 'tN')"
    1039, , MINsssNH, "AtomTypeEState('min', 'sssNH')"
    1040, , MINdsN, "AtomTypeEState('min', 'dsN')"
    1041, , MINaaN, "AtomTypeEState('min', 'aaN')"
    1042, , MINsssN, "AtomTypeEState('min', 'sssN')"
    1043, , MINddsN, "AtomTypeEState('min', 'ddsN')"
    1044, , MINaasN, "AtomTypeEState('min', 'aasN')"
    1045, , MINssssN, "AtomTypeEState('min', 'ssssN')"
    1046, , MINsOH, "AtomTypeEState('min', 'sOH')"
    1047, , MINdO, "AtomTypeEState('min', 'dO')"
    1048, , MINssO, "AtomTypeEState('min', 'ssO')"
    1049, , MINaaO, "AtomTypeEState('min', 'aaO')"
    1050, , MINsF, "AtomTypeEState('min', 'sF')"
    1051, , MINsSiH3, "AtomTypeEState('min', 'sSiH3')"
    1052, , MINssSiH2, "AtomTypeEState('min', 'ssSiH2')"
    1053, , MINsssSiH, "AtomTypeEState('min', 'sssSiH')"
    1054, , MINssssSi, "AtomTypeEState('min', 'ssssSi')"
    1055, , MINsPH2, "AtomTypeEState('min', 'sPH2')"
    1056, , MINssPH, "AtomTypeEState('min', 'ssPH')"
    1057, , MINsssP, "AtomTypeEState('min', 'sssP')"
    1058, , MINdsssP, "AtomTypeEState('min', 'dsssP')"
    1059, , MINsssssP, "AtomTypeEState('min', 'sssssP')"
    1060, , MINsSH, "AtomTypeEState('min', 'sSH')"
    1061, , MINdS, "AtomTypeEState('min', 'dS')"
    1062, , MINssS, "AtomTypeEState('min', 'ssS')"
    1063, , MINaaS, "AtomTypeEState('min', 'aaS')"
    1064, , MINdssS, "AtomTypeEState('min', 'dssS')"
    1065, , MINddssS, "AtomTypeEState('min', 'ddssS')"
    1066, , MINsCl, "AtomTypeEState('min', 'sCl')"
    1067, , MINsGeH3, "AtomTypeEState('min', 'sGeH3')"
    1068, , MINssGeH2, "AtomTypeEState('min', 'ssGeH2')"
    1069, , MINsssGeH, "AtomTypeEState('min', 'sssGeH')"
    1070, , MINssssGe, "AtomTypeEState('min', 'ssssGe')"
    1071, , MINsAsH2, "AtomTypeEState('min', 'sAsH2')"
    1072, , MINssAsH, "AtomTypeEState('min', 'ssAsH')"
    1073, , MINsssAs, "AtomTypeEState('min', 'sssAs')"
    1074, , MINsssdAs, "AtomTypeEState('min', 'sssdAs')"
    1075, , MINsssssAs, "AtomTypeEState('min', 'sssssAs')"
    1076, , MINsSeH, "AtomTypeEState('min', 'sSeH')"
    1077, , MINdSe, "AtomTypeEState('min', 'dSe')"
    1078, , MINssSe, "AtomTypeEState('min', 'ssSe')"
    1079, , MINaaSe, "AtomTypeEState('min', 'aaSe')"
    1080, , MINdssSe, "AtomTypeEState('min', 'dssSe')"
    1081, , MINddssSe, "AtomTypeEState('min', 'ddssSe')"
    1082, , MINsBr, "AtomTypeEState('min', 'sBr')"
    1083, , MINsSnH3, "AtomTypeEState('min', 'sSnH3')"
    1084, , MINssSnH2, "AtomTypeEState('min', 'ssSnH2')"
    1085, , MINsssSnH, "AtomTypeEState('min', 'sssSnH')"
    1086, , MINssssSn, "AtomTypeEState('min', 'ssssSn')"
    1087, , MINsI, "AtomTypeEState('min', 'sI')"
    1088, , MINsPbH3, "AtomTypeEState('min', 'sPbH3')"
    1089, , MINssPbH2, "AtomTypeEState('min', 'ssPbH2')"
    1090, , MINsssPbH, "AtomTypeEState('min', 'sssPbH')"
    1091, , MINssssPb, "AtomTypeEState('min', 'ssssPb')"
    1092, EccentricConnectivityIndex, ECIndex, "EccentricConnectivityIndex()"
    1093, FragmentComplexity, fragCpx, "FragmentComplexity()"
    1094, Framework, fMF, "Framework()"
    1095, HydrogenBond, nHBAcc, "HBondAcceptor()"
    1096, , nHBDon, "HBondDonor()"
    1097, InformationContent, IC0, "InformationContent('', 0)"
    1098, , IC1, "InformationContent('', 1)"
    1099, , IC2, "InformationContent('', 2)"
    1100, , IC3, "InformationContent('', 3)"
    1101, , IC4, "InformationContent('', 4)"
    1102, , IC5, "InformationContent('', 5)"
    1103, , TIC0, "InformationContent('T', 0)"
    1104, , TIC1, "InformationContent('T', 1)"
    1105, , TIC2, "InformationContent('T', 2)"
    1106, , TIC3, "InformationContent('T', 3)"
    1107, , TIC4, "InformationContent('T', 4)"
    1108, , TIC5, "InformationContent('T', 5)"
    1109, , SIC0, "InformationContent('S', 0)"
    1110, , SIC1, "InformationContent('S', 1)"
    1111, , SIC2, "InformationContent('S', 2)"
    1112, , SIC3, "InformationContent('S', 3)"
    1113, , SIC4, "InformationContent('S', 4)"
    1114, , SIC5, "InformationContent('S', 5)"
    1115, , CIC0, "InformationContent('C', 0)"
    1116, , CIC1, "InformationContent('C', 1)"
    1117, , CIC2, "InformationContent('C', 2)"
    1118, , CIC3, "InformationContent('C', 3)"
    1119, , CIC4, "InformationContent('C', 4)"
    1120, , CIC5, "InformationContent('C', 5)"
    1121, , BIC0, "InformationContent('B', 0)"
    1122, , BIC1, "InformationContent('B', 1)"
    1123, , BIC2, "InformationContent('B', 2)"
    1124, , BIC3, "InformationContent('B', 3)"
    1125, , BIC4, "InformationContent('B', 4)"
    1126, , BIC5, "InformationContent('B', 5)"
    1127, , MIC0, "InformationContent('M', 0)"
    1128, , MIC1, "InformationContent('M', 1)"
    1129, , MIC2, "InformationContent('M', 2)"
    1130, , MIC3, "InformationContent('M', 3)"
    1131, , MIC4, "InformationContent('M', 4)"
    1132, , MIC5, "InformationContent('M', 5)"
    1133, , ZMIC0, "InformationContent('ZM', 0)"
    1134, , ZMIC1, "InformationContent('ZM', 1)"
    1135, , ZMIC2, "InformationContent('ZM', 2)"
    1136, , ZMIC3, "InformationContent('ZM', 3)"
    1137, , ZMIC4, "InformationContent('ZM', 4)"
    1138, , ZMIC5, "InformationContent('ZM', 5)"
    1139, KappaShapeIndex, Kier1, "KappaShapeIndex(1)"
    1140, , Kier2, "KappaShapeIndex(2)"
    1141, , Kier3, "KappaShapeIndex(3)"
    1142, Lipinski, Lipinski, "LipinskiLike('Lipinski')"
    1143, , GhoseFilter, "LipinskiLike('GhoseFilter')"
    1144, McGowanVolume, VMcGowan, "McGowanVolume()"
    1145, MolecularDistanceEdge, MDEC-11, "MolecularDistanceEdge(1, 1, 6)"
    1146, , MDEC-12, "MolecularDistanceEdge(1, 2, 6)"
    1147, , MDEC-13, "MolecularDistanceEdge(1, 3, 6)"
    1148, , MDEC-14, "MolecularDistanceEdge(1, 4, 6)"
    1149, , MDEC-22, "MolecularDistanceEdge(2, 2, 6)"
    1150, , MDEC-23, "MolecularDistanceEdge(2, 3, 6)"
    1151, , MDEC-24, "MolecularDistanceEdge(2, 4, 6)"
    1152, , MDEC-33, "MolecularDistanceEdge(3, 3, 6)"
    1153, , MDEC-34, "MolecularDistanceEdge(3, 4, 6)"
    1154, , MDEC-44, "MolecularDistanceEdge(4, 4, 6)"
    1155, , MDEO-11, "MolecularDistanceEdge(1, 1, 8)"
    1156, , MDEO-12, "MolecularDistanceEdge(1, 2, 8)"
    1157, , MDEO-22, "MolecularDistanceEdge(2, 2, 8)"
    1158, , MDEN-11, "MolecularDistanceEdge(1, 1, 7)"
    1159, , MDEN-12, "MolecularDistanceEdge(1, 2, 7)"
    1160, , MDEN-13, "MolecularDistanceEdge(1, 3, 7)"
    1161, , MDEN-22, "MolecularDistanceEdge(2, 2, 7)"
    1162, , MDEN-23, "MolecularDistanceEdge(2, 3, 7)"
    1163, , MDEN-33, "MolecularDistanceEdge(3, 3, 7)"
    1164, RingCount, nRing, "RingCount(None, False, False, None, None)"
    1165, , n3Ring, "RingCount(3, False, False, None, None)"
    1166, , n4Ring, "RingCount(4, False, False, None, None)"
    1167, , n5Ring, "RingCount(5, False, False, None, None)"
    1168, , n6Ring, "RingCount(6, False, False, None, None)"
    1169, , n7Ring, "RingCount(7, False, False, None, None)"
    1170, , n8Ring, "RingCount(8, False, False, None, None)"
    1171, , n9Ring, "RingCount(9, False, False, None, None)"
    1172, , n10Ring, "RingCount(10, False, False, None, None)"
    1173, , n11Ring, "RingCount(11, False, False, None, None)"
    1174, , n12Ring, "RingCount(12, False, False, None, None)"
    1175, , nG12Ring, "RingCount(12, True, False, None, None)"
    1176, , nHRing, "RingCount(None, False, False, None, True)"
    1177, , n3HRing, "RingCount(3, False, False, None, True)"
    1178, , n4HRing, "RingCount(4, False, False, None, True)"
    1179, , n5HRing, "RingCount(5, False, False, None, True)"
    1180, , n6HRing, "RingCount(6, False, False, None, True)"
    1181, , n7HRing, "RingCount(7, False, False, None, True)"
    1182, , n8HRing, "RingCount(8, False, False, None, True)"
    1183, , n9HRing, "RingCount(9, False, False, None, True)"
    1184, , n10HRing, "RingCount(10, False, False, None, True)"
    1185, , n11HRing, "RingCount(11, False, False, None, True)"
    1186, , n12HRing, "RingCount(12, False, False, None, True)"
    1187, , nG12HRing, "RingCount(12, True, False, None, True)"
    1188, , naRing, "RingCount(None, False, False, True, None)"
    1189, , n3aRing, "RingCount(3, False, False, True, None)"
    1190, , n4aRing, "RingCount(4, False, False, True, None)"
    1191, , n5aRing, "RingCount(5, False, False, True, None)"
    1192, , n6aRing, "RingCount(6, False, False, True, None)"
    1193, , n7aRing, "RingCount(7, False, False, True, None)"
    1194, , n8aRing, "RingCount(8, False, False, True, None)"
    1195, , n9aRing, "RingCount(9, False, False, True, None)"
    1196, , n10aRing, "RingCount(10, False, False, True, None)"
    1197, , n11aRing, "RingCount(11, False, False, True, None)"
    1198, , n12aRing, "RingCount(12, False, False, True, None)"
    1199, , nG12aRing, "RingCount(12, True, False, True, None)"
    1200, , naHRing, "RingCount(None, False, False, True, True)"
    1201, , n3aHRing, "RingCount(3, False, False, True, True)"
    1202, , n4aHRing, "RingCount(4, False, False, True, True)"
    1203, , n5aHRing, "RingCount(5, False, False, True, True)"
    1204, , n6aHRing, "RingCount(6, False, False, True, True)"
    1205, , n7aHRing, "RingCount(7, False, False, True, True)"
    1206, , n8aHRing, "RingCount(8, False, False, True, True)"
    1207, , n9aHRing, "RingCount(9, False, False, True, True)"
    1208, , n10aHRing, "RingCount(10, False, False, True, True)"
    1209, , n11aHRing, "RingCount(11, False, False, True, True)"
    1210, , n12aHRing, "RingCount(12, False, False, True, True)"
    1211, , nG12aHRing, "RingCount(12, True, False, True, True)"
    1212, , nARing, "RingCount(None, False, False, False, None)"
    1213, , n3ARing, "RingCount(3, False, False, False, None)"
    1214, , n4ARing, "RingCount(4, False, False, False, None)"
    1215, , n5ARing, "RingCount(5, False, False, False, None)"
    1216, , n6ARing, "RingCount(6, False, False, False, None)"
    1217, , n7ARing, "RingCount(7, False, False, False, None)"
    1218, , n8ARing, "RingCount(8, False, False, False, None)"
    1219, , n9ARing, "RingCount(9, False, False, False, None)"
    1220, , n10ARing, "RingCount(10, False, False, False, None)"
    1221, , n11ARing, "RingCount(11, False, False, False, None)"
    1222, , n12ARing, "RingCount(12, False, False, False, None)"
    1223, , nG12ARing, "RingCount(12, True, False, False, None)"
    1224, , nAHRing, "RingCount(None, False, False, False, True)"
    1225, , n3AHRing, "RingCount(3, False, False, False, True)"
    1226, , n4AHRing, "RingCount(4, False, False, False, True)"
    1227, , n5AHRing, "RingCount(5, False, False, False, True)"
    1228, , n6AHRing, "RingCount(6, False, False, False, True)"
    1229, , n7AHRing, "RingCount(7, False, False, False, True)"
    1230, , n8AHRing, "RingCount(8, False, False, False, True)"
    1231, , n9AHRing, "RingCount(9, False, False, False, True)"
    1232, , n10AHRing, "RingCount(10, False, False, False, True)"
    1233, , n11AHRing, "RingCount(11, False, False, False, True)"
    1234, , n12AHRing, "RingCount(12, False, False, False, True)"
    1235, , nG12AHRing, "RingCount(12, True, False, False, True)"
    1236, , nFRing, "RingCount(None, False, True, None, None)"
    1237, , n4FRing, "RingCount(4, False, True, None, None)"
    1238, , n5FRing, "RingCount(5, False, True, None, None)"
    1239, , n6FRing, "RingCount(6, False, True, None, None)"
    1240, , n7FRing, "RingCount(7, False, True, None, None)"
    1241, , n8FRing, "RingCount(8, False, True, None, None)"
    1242, , n9FRing, "RingCount(9, False, True, None, None)"
    1243, , n10FRing, "RingCount(10, False, True, None, None)"
    1244, , n11FRing, "RingCount(11, False, True, None, None)"
    1245, , n12FRing, "RingCount(12, False, True, None, None)"
    1246, , nG12FRing, "RingCount(12, True, True, None, None)"
    1247, , nFHRing, "RingCount(None, False, True, None, True)"
    1248, , n4FHRing, "RingCount(4, False, True, None, True)"
    1249, , n5FHRing, "RingCount(5, False, True, None, True)"
    1250, , n6FHRing, "RingCount(6, False, True, None, True)"
    1251, , n7FHRing, "RingCount(7, False, True, None, True)"
    1252, , n8FHRing, "RingCount(8, False, True, None, True)"
    1253, , n9FHRing, "RingCount(9, False, True, None, True)"
    1254, , n10FHRing, "RingCount(10, False, True, None, True)"
    1255, , n11FHRing, "RingCount(11, False, True, None, True)"
    1256, , n12FHRing, "RingCount(12, False, True, None, True)"
    1257, , nG12FHRing, "RingCount(12, True, True, None, True)"
    1258, , nFaRing, "RingCount(None, False, True, True, None)"
    1259, , n4FaRing, "RingCount(4, False, True, True, None)"
    1260, , n5FaRing, "RingCount(5, False, True, True, None)"
    1261, , n6FaRing, "RingCount(6, False, True, True, None)"
    1262, , n7FaRing, "RingCount(7, False, True, True, None)"
    1263, , n8FaRing, "RingCount(8, False, True, True, None)"
    1264, , n9FaRing, "RingCount(9, False, True, True, None)"
    1265, , n10FaRing, "RingCount(10, False, True, True, None)"
    1266, , n11FaRing, "RingCount(11, False, True, True, None)"
    1267, , n12FaRing, "RingCount(12, False, True, True, None)"
    1268, , nG12FaRing, "RingCount(12, True, True, True, None)"
    1269, , nFaHRing, "RingCount(None, False, True, True, True)"
    1270, , n4FaHRing, "RingCount(4, False, True, True, True)"
    1271, , n5FaHRing, "RingCount(5, False, True, True, True)"
    1272, , n6FaHRing, "RingCount(6, False, True, True, True)"
    1273, , n7FaHRing, "RingCount(7, False, True, True, True)"
    1274, , n8FaHRing, "RingCount(8, False, True, True, True)"
    1275, , n9FaHRing, "RingCount(9, False, True, True, True)"
    1276, , n10FaHRing, "RingCount(10, False, True, True, True)"
    1277, , n11FaHRing, "RingCount(11, False, True, True, True)"
    1278, , n12FaHRing, "RingCount(12, False, True, True, True)"
    1279, , nG12FaHRing, "RingCount(12, True, True, True, True)"
    1280, , nFARing, "RingCount(None, False, True, False, None)"
    1281, , n4FARing, "RingCount(4, False, True, False, None)"
    1282, , n5FARing, "RingCount(5, False, True, False, None)"
    1283, , n6FARing, "RingCount(6, False, True, False, None)"
    1284, , n7FARing, "RingCount(7, False, True, False, None)"
    1285, , n8FARing, "RingCount(8, False, True, False, None)"
    1286, , n9FARing, "RingCount(9, False, True, False, None)"
    1287, , n10FARing, "RingCount(10, False, True, False, None)"
    1288, , n11FARing, "RingCount(11, False, True, False, None)"
    1289, , n12FARing, "RingCount(12, False, True, False, None)"
    1290, , nG12FARing, "RingCount(12, True, True, False, None)"
    1291, , nFAHRing, "RingCount(None, False, True, False, True)"
    1292, , n4FAHRing, "RingCount(4, False, True, False, True)"
    1293, , n5FAHRing, "RingCount(5, False, True, False, True)"
    1294, , n6FAHRing, "RingCount(6, False, True, False, True)"
    1295, , n7FAHRing, "RingCount(7, False, True, False, True)"
    1296, , n8FAHRing, "RingCount(8, False, True, False, True)"
    1297, , n9FAHRing, "RingCount(9, False, True, False, True)"
    1298, , n10FAHRing, "RingCount(10, False, True, False, True)"
    1299, , n11FAHRing, "RingCount(11, False, True, False, True)"
    1300, , n12FAHRing, "RingCount(12, False, True, False, True)"
    1301, , nG12FAHRing, "RingCount(12, True, True, False, True)"
    1302, RotatableBond, nRot, "RotatableBondsCount()"
    1303, , RotRatio, "RotatableBondsRatio()"
    1304, TPSA, TPSA(NO), "TPSA(True)"
    1305, , TPSA, "TPSA(False)"
    1306, TopologicalCharge, GGI1, "TopologicalCharge('raw', 1)"
    1307, , GGI2, "TopologicalCharge('raw', 2)"
    1308, , GGI3, "TopologicalCharge('raw', 3)"
    1309, , GGI4, "TopologicalCharge('raw', 4)"
    1310, , GGI5, "TopologicalCharge('raw', 5)"
    1311, , GGI6, "TopologicalCharge('raw', 6)"
    1312, , GGI7, "TopologicalCharge('raw', 7)"
    1313, , GGI8, "TopologicalCharge('raw', 8)"
    1314, , GGI9, "TopologicalCharge('raw', 9)"
    1315, , GGI10, "TopologicalCharge('raw', 10)"
    1316, , JGI1, "TopologicalCharge('mean', 1)"
    1317, , JGI2, "TopologicalCharge('mean', 2)"
    1318, , JGI3, "TopologicalCharge('mean', 3)"
    1319, , JGI4, "TopologicalCharge('mean', 4)"
    1320, , JGI5, "TopologicalCharge('mean', 5)"
    1321, , JGI6, "TopologicalCharge('mean', 6)"
    1322, , JGI7, "TopologicalCharge('mean', 7)"
    1323, , JGI8, "TopologicalCharge('mean', 8)"
    1324, , JGI9, "TopologicalCharge('mean', 9)"
    1325, , JGI10, "TopologicalCharge('mean', 10)"
    1326, , JGT10, "TopologicalCharge('global', 10)"
    1327, TopologicalIndex, Radius, "Radius()"
    1328, , Diameter, "Diameter()"
    1329, , TopoShapeIndex, "TopologicalShapeIndex()"
    1330, , PetitjeanIndex, "PetitjeanIndex()"
    1331, VdwVolumeABC, Vabc, "VdwVolumeABC()"
    1332, VertexAdjacencyInformation, VAdjMat, "VertexAdjacencyInformation()"
    1333, WalkCount, MWC01, "WalkCount(1, False, False)"
    1334, , MWC02, "WalkCount(2, False, False)"
    1335, , MWC03, "WalkCount(3, False, False)"
    1336, , MWC04, "WalkCount(4, False, False)"
    1337, , MWC05, "WalkCount(5, False, False)"
    1338, , MWC06, "WalkCount(6, False, False)"
    1339, , MWC07, "WalkCount(7, False, False)"
    1340, , MWC08, "WalkCount(8, False, False)"
    1341, , MWC09, "WalkCount(9, False, False)"
    1342, , MWC10, "WalkCount(10, False, False)"
    1343, , TMWC10, "WalkCount(10, True, False)"
    1344, , SRW02, "WalkCount(2, False, True)"
    1345, , SRW03, "WalkCount(3, False, True)"
    1346, , SRW04, "WalkCount(4, False, True)"
    1347, , SRW05, "WalkCount(5, False, True)"
    1348, , SRW06, "WalkCount(6, False, True)"
    1349, , SRW07, "WalkCount(7, False, True)"
    1350, , SRW08, "WalkCount(8, False, True)"
    1351, , SRW09, "WalkCount(9, False, True)"
    1352, , SRW10, "WalkCount(10, False, True)"
    1353, , TSRW10, "WalkCount(10, True, True)"
    1354, Weight, MW, "Weight(False)"
    1355, , AMW, "Weight(True)"
    1356, WienerIndex, WPath, "WienerIndex(False)"
    1357, , WPol, "WienerIndex(True)"
    1358, WildmanCrippenLogP, CrippenLogP, "WildmanCrippenLogP('LogP')"
    1359, , CrippenMR, "WildmanCrippenLogP('MR')"
    1360, ZagrebIndex, Zagreb1, "ZagrebIndex(1, 1)"
    1361, , Zagreb2, "ZagrebIndex(2, 1)"
    1362, , mZagreb1, "ZagrebIndex(1, -1)"
    1363, , mZagreb2, "ZagrebIndex(2, -1)"
